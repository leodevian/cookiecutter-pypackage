---
name: CI

on:
  push:
    branches: [main]
    tags-ignore: ["**"]
  pull_request:
  workflow_dispatch:

concurrency:
  group: {% raw %}${{ github.workflow }}-${{ github.ref }}{% endraw %}
  cancel-in-progress: true

permissions: {}

jobs:
  check:
    name: Run {% raw %}${{ matrix.env }}{% endraw %}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - lint
          - type
          - type-tests
          - docstrings
          - pkg
          - docs

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          github-token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}

      - name: Install tox
        run: >-
          uv tool install tox
          --python-preference only-managed
          --python 3.13
          --with tox-uv

      - name: Setup check suite
        run: >-
          tox run
          --notest
          --skip-missing-interpreters false
          -e {% raw %}${{ matrix.env }}{% endraw %}

      - name: Run check suite
        run: >-
          tox run
          --skip-pkg-install
          -e {% raw %}${{ matrix.env }}{% endraw %}

  tests:
    name: Run tests under {% raw %}${{ matrix.python_version }}{% endraw %}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - "{{ cookiecutter.python_version }}"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          github-token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}

      - name: Install tox
        run: >-
          uv tool install tox
          --python-preference only-managed
          --python 3.13
          --with tox-uv

      - name: Setup test suite
        run: >-
          tox run
          --notest
          --skip-missing-interpreters false
          -e {% raw %}${{ matrix.python_version }}{% endraw %}

      - name: Run test suite
        run: >-
          tox run
          --skip-pkg-install
          -e {% raw %}${{ matrix.python_version }}{% endraw %}

      - name: Store coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-{% raw %}${{ matrix.python_version }}{% endraw %}
          path: .coverage.*
          include-hidden-files: true

  coverage:
    name: Combine and check coverage
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          github-token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}

      - name: Combine coverage data
        run: >-
          uv run
          --only-group coverage
          coverage combine

      - name: Create an HTML report
        run: >-
          uv run
          --only-group coverage
          coverage html

      - name: Check coverage
        run: >-
          uv run
          --only-group coverage
          coverage report

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
        if: {% raw %}${{ failure() }}{% endraw %}
